// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gestion_de_catalogue.Data;

namespace gestion_de_catalogue.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("gestion_de_catalogue.Models.Categorie", b =>
                {
                    b.Property<int>("CategorieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomCategorie")
                        .IsRequired()
                        .HasColumnType("varchar(35) CHARACTER SET utf8mb4")
                        .HasMaxLength(35);

                    b.HasKey("CategorieID");

                    b.ToTable("CATEGORIES");
                });

            modelBuilder.Entity("gestion_de_catalogue.Models.Produit", b =>
                {
                    b.Property<int>("ProduitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategorieID")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("varchar(25) CHARACTER SET utf8mb4")
                        .HasMaxLength(25);

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.HasKey("ProduitId");

                    b.HasIndex("CategorieID");

                    b.ToTable("PRODUITS");
                });

            modelBuilder.Entity("gestion_de_catalogue.Models.Produit", b =>
                {
                    b.HasOne("gestion_de_catalogue.Models.Categorie", "Categorie")
                        .WithMany("Produits")
                        .HasForeignKey("CategorieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
